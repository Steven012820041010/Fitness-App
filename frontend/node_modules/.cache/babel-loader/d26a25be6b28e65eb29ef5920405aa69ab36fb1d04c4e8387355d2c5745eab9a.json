{"ast":null,"code":"var _jsxFileName = \"/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/WorkoutPlan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DataTable from \"./DataTable\";\nimport \"./WorkoutPlan.css\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst actions = ['Chest', 'Shoulder', 'Back', ''];\nconst WorkoutPlan = () => {\n  _s();\n  const {\n    date\n  } = useParams();\n  const [bodyPart, setBodyPart] = useState('');\n  const updateBodyPart = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-plan\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"title\",\n      children: [\"Workout Plan for \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-workout-type\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-multiple-checkbox-label\",\n          children: \"Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-multiple-checkbox-label\",\n          id: \"demo-multiple-checkbox\",\n          multiple: true,\n          value: bodyPart,\n          onChange: handleBodyPart,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            label: \"Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }, this),\n          renderValue: selected => selected.join(', '),\n          MenuProps: MenuProps,\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: personName.indexOf(name) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-table\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutPlan, \"63ujx7hGmfLSTjttPssIKG73NGw=\", false, function () {\n  return [useParams];\n});\n_c = WorkoutPlan;\nexport default WorkoutPlan;\nvar _c;\n$RefreshReg$(_c, \"WorkoutPlan\");","map":{"version":3,"names":["React","useState","useParams","DataTable","InputLabel","MenuItem","FormControl","Select","jsxDEV","_jsxDEV","actions","WorkoutPlan","_s","date","bodyPart","setBodyPart","updateBodyPart","event","target","value","setPersonName","split","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","sx","m","width","labelId","multiple","onChange","handleBodyPart","input","OutlinedInput","label","renderValue","selected","join","MenuProps","names","map","name","Checkbox","checked","personName","indexOf","ListItemText","primary","_c","$RefreshReg$"],"sources":["/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/WorkoutPlan.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DataTable from \"./DataTable\";\nimport \"./WorkoutPlan.css\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst actions = [\n  'Chest',\n  'Shoulder',\n  'Back',\n  ''\n]\n\n\nconst WorkoutPlan = () => {\n  const { date } = useParams();\n  const [bodyPart, setBodyPart] = useState('');\n\n  const updateBodyPart = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  }\n\n  return (\n    <div className=\"workout-plan\">\n      <h2 id=\"title\">Workout Plan for {date}</h2>\n      <div className=\"select-workout-type\">\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={bodyPart}\n          onChange={handleBodyPart}\n          input={<OutlinedInput label=\"Tag\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      </div>\n      <div className=\"input-table\">\n        <DataTable />\n      </div>\n    </div>\n  );\n};\n\nexport default WorkoutPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}