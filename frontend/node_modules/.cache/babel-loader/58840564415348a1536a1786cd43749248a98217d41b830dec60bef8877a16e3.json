{"ast":null,"code":"var _jsxFileName = \"/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/DataTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './DataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  // Initialize the state with 5 rows and 5 columns of empty strings\n  const [data, setData] = useState(() => {\n    const rows = new Array(5).fill(null).map(() => new Array(5).fill(''));\n    rows[0][0] = 'Action';\n    rows[0][1] = 'S';\n    return rows;\n  });\n\n  // Handle input change\n  const handleInputChange = (value, row, col) => {\n    // Update the specific cell with the new value\n    const updatedData = data.map((rowData, rowIndex) => {\n      if (rowIndex === row) {\n        return rowData.map((cellData, colIndex) => {\n          if (colIndex === col) {\n            return value;\n          }\n          return cellData;\n        });\n      }\n      return rowData;\n    });\n    setData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"workout-table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-box\",\n            type: \"text\",\n            value: cell,\n            onChange: e => handleInputChange(e.target.value, rowIndex, colIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"GG8N5a1nRhFSaLJ4ZaHQjPK544M=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataTable","_s","data","setData","rows","Array","fill","map","handleInputChange","value","row","col","updatedData","rowData","rowIndex","cellData","colIndex","className","children","cell","type","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/DataTable.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './DataTable.css';\n\nconst DataTable = () => {\n  // Initialize the state with 5 rows and 5 columns of empty strings\n  const [data, setData] = useState(() => {\n    const rows = new Array(5).fill(null).map(() => new Array(5).fill(''));\n    rows[0][0] = 'Action';\n    rows[0][1] = 'S'\n    return rows;\n  })\n\n  // Handle input change\n  const handleInputChange = (value, row, col) => {\n    // Update the specific cell with the new value\n    const updatedData = data.map((rowData, rowIndex) => {\n      if (rowIndex === row) {\n        return rowData.map((cellData, colIndex) => {\n          if (colIndex === col) {\n            return value;\n          }\n          return cellData;\n        });\n      }\n      return rowData;\n    });\n\n    setData(updatedData);\n  };\n\n  return (\n    <table className=\"workout-table\">\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, colIndex) => (\n              <td key={colIndex}>\n                <input\n                  className='input-box'\n                  type=\"text\"\n                  value={cell}\n                  onChange={(e) => handleInputChange(e.target.value, rowIndex, colIndex)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default DataTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,MAAM;IACrC,MAAMO,IAAI,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,MAAM,IAAIF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrEF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ;IACrBA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IAChB,OAAOA,IAAI;EACb,CAAC,CAAC;;EAEF;EACA,MAAMI,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,KAAK;IAC7C;IACA,MAAMC,WAAW,GAAGV,IAAI,CAACK,GAAG,CAAC,CAACM,OAAO,EAAEC,QAAQ,KAAK;MAClD,IAAIA,QAAQ,KAAKJ,GAAG,EAAE;QACpB,OAAOG,OAAO,CAACN,GAAG,CAAC,CAACQ,QAAQ,EAAEC,QAAQ,KAAK;UACzC,IAAIA,QAAQ,KAAKL,GAAG,EAAE;YACpB,OAAOF,KAAK;UACd;UACA,OAAOM,QAAQ;QACjB,CAAC,CAAC;MACJ;MACA,OAAOF,OAAO;IAChB,CAAC,CAAC;IAEFV,OAAO,CAACS,WAAW,CAAC;EACtB,CAAC;EAED,oBACEb,OAAA;IAAOkB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC9BnB,OAAA;MAAAmB,QAAA,EACGhB,IAAI,CAACK,GAAG,CAAC,CAACG,GAAG,EAAEI,QAAQ,kBACtBf,OAAA;QAAAmB,QAAA,EACGR,GAAG,CAACH,GAAG,CAAC,CAACY,IAAI,EAAEH,QAAQ,kBACtBjB,OAAA;UAAAmB,QAAA,eACEnB,OAAA;YACEkB,SAAS,EAAC,WAAW;YACrBG,IAAI,EAAC,MAAM;YACXX,KAAK,EAAEU,IAAK;YACZE,QAAQ,EAAGC,CAAC,IAAKd,iBAAiB,CAACc,CAAC,CAACC,MAAM,CAACd,KAAK,EAAEK,QAAQ,EAAEE,QAAQ;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE;QAAC,GANKX,QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACL;MAAC,GAVKb,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAA1B,EAAA,CA/CKD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}