{"ast":null,"code":"var _jsxFileName = \"/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Health/UpdateComp.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './UpdateComp.css';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst types = ['Weight', 'Height', 'Sleep', 'Calories'];\nconst UpdateComp = ({\n  visibility,\n  setVisibility\n}) => {\n  _s();\n  const [type, setType] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setType(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-comp\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-checkbox-label\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-checkbox-label\",\n        id: \"demo-multiple-checkbox\",\n        multiple: true,\n        value: type,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: types.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: type,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: type.indexOf(type) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateComp, \"WXPla22d30zypIVQqRgwjrC0hIM=\");\n_c = UpdateComp;\nexport default UpdateComp;\nvar _c;\n$RefreshReg$(_c, \"UpdateComp\");","map":{"version":3,"names":["React","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","types","UpdateComp","visibility","setVisibility","_s","type","setType","useState","handleChange","event","target","value","split","className","children","sx","m","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","multiple","onChange","input","label","renderValue","selected","join","map","checked","indexOf","primary","_c","$RefreshReg$"],"sources":["/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Health/UpdateComp.jsx"],"sourcesContent":["import React from 'react'\nimport './UpdateComp.css'\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst types = [\n  'Weight',\n  'Height',\n  'Sleep',\n  'Calories'\n];\n\nconst UpdateComp = ({ visibility, setVisibility }) => {\n  const [type, setType] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setType(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div className='update-comp'>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">Type</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={type}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Types\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {types.map((type) => (\n            <MenuItem key={type} value={type}>\n              <Checkbox checked={type.indexOf(type) > -1} />\n              <ListItemText primary={type} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default UpdateComp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}