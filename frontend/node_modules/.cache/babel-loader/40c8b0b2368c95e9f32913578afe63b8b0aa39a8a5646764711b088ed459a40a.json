{"ast":null,"code":"var _jsxFileName = \"/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/WorkoutPlan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DataTable from \"./DataTable\";\nimport \"./WorkoutPlan.css\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst actions = [\"Chest\", \"Shoulder\", \"Back\", \"Leg\", \"Arm\", \"Cardio\", \"Abs\", \"Other\"];\nconst WorkoutPlan = () => {\n  _s();\n  const {\n    date\n  } = useParams();\n  const [bodyPart, setBodyPart] = useState([]);\n  const updateBodyPart = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setBodyPart(\n    // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(KeyboardDoubleArrowLeftOutlinedIcon, {\n      id: \"go-to-info\",\n      onClick: () => returnToHome(),\n      style: {\n        cursor: \"pointer\",\n        fontSize: \"2.5em\",\n        color: \"#004352\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workout-plan\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"title\",\n        children: [\"Workout Plan for \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-workout-type\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: 300,\n            minWidth: 80\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-multiple-checkbox-label\",\n            children: \"Choose Training Part\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-multiple-checkbox-label\",\n            id: \"demo-multiple-checkbox\",\n            multiple: true,\n            value: bodyPart,\n            onChange: updateBodyPart,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Choose Training Parts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 20\n            }, this),\n            renderValue: selected => selected.join(\", \"),\n            MenuProps: MenuProps,\n            children: actions.map(action => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: action,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: bodyPart.indexOf(action) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, action, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-table\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutPlan, \"4K1pu4qfuV6b9Rtmz6xG9b0qvcI=\", false, function () {\n  return [useParams];\n});\n_c = WorkoutPlan;\nexport default WorkoutPlan;\nvar _c;\n$RefreshReg$(_c, \"WorkoutPlan\");","map":{"version":3,"names":["React","useState","useParams","DataTable","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","actions","WorkoutPlan","_s","date","bodyPart","setBodyPart","updateBodyPart","event","target","value","split","className","children","KeyboardDoubleArrowLeftOutlinedIcon","id","onClick","returnToHome","cursor","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","m","minWidth","labelId","multiple","onChange","input","label","renderValue","selected","join","map","action","checked","indexOf","primary","_c","$RefreshReg$"],"sources":["/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/WorkoutPlan.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DataTable from \"./DataTable\";\nimport \"./WorkoutPlan.css\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst actions = [\n  \"Chest\",\n  \"Shoulder\",\n  \"Back\",\n  \"Leg\",\n  \"Arm\",\n  \"Cardio\",\n  \"Abs\",\n  \"Other\",\n];\n\nconst WorkoutPlan = () => {\n  const { date } = useParams();\n  const [bodyPart, setBodyPart] = useState([]);\n\n  const updateBodyPart = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setBodyPart(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <KeyboardDoubleArrowLeftOutlinedIcon\n          id=\"go-to-info\"\n          onClick={() => returnToHome()}\n          style={{ cursor: \"pointer\", fontSize: \"2.5em\", color: \"#004352\" }}\n        />\n        <div className=\"workout-plan\">\n      <h2 id=\"title\">Workout Plan for {date}</h2>\n      <div className=\"select-workout-type\">\n        <FormControl sx={{ m: 1, width: 300, minWidth: 80 }}>\n          <InputLabel id=\"demo-multiple-checkbox-label\">\n            Choose Training Part\n          </InputLabel>\n          <Select\n            labelId=\"demo-multiple-checkbox-label\"\n            id=\"demo-multiple-checkbox\"\n            multiple\n            value={bodyPart}\n            onChange={updateBodyPart}\n            input={<OutlinedInput label=\"Choose Training Parts\" />}\n            renderValue={(selected) => selected.join(\", \")}\n            MenuProps={MenuProps}\n          >\n            {actions.map((action) => (\n              <MenuItem key={action} value={action}>\n                <Checkbox checked={bodyPart.indexOf(action) > -1} />\n                <ListItemText primary={action} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div className=\"input-table\">\n        <DataTable />\n      </div>\n    </div>\n    </div>\n    \n  );\n};\n\nexport default WorkoutPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}