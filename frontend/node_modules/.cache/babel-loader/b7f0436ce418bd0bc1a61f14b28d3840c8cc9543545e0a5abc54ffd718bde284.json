{"ast":null,"code":"var _jsxFileName = \"/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/DataTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./DataTable.css\";\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  // Initialize the state with 5 rows and 5 columns of empty strings\n  const [row, setRow] = useState(4);\n  const [col, setCol] = useState(4);\n  const [data, setData] = useState(() => {\n    const rows = new Array(row).fill(null).map(() => new Array(col).fill(\"\"));\n    rows[0][0] = \"Actions\";\n    rows[0][1] = \"Set 1\";\n    rows[0][2] = \"Set 2\";\n    return rows;\n  });\n\n  // Handle input change\n  const handleInputChange = (value, row, col) => {\n    // Update the specific cell with the new value\n    const updatedData = data.map((rowData, rowIndex) => {\n      if (rowIndex === row) {\n        return rowData.map((cellData, colIndex) => {\n          if (colIndex === col) {\n            return value;\n          }\n          return cellData;\n        });\n      }\n      return rowData;\n    });\n    setData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"workout-table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            width: colIndex === col - 1 ? \"1em\" : \"10em\",\n            cursor: 'pointer'\n          },\n          children: rowIndex === 0 && colIndex === col - 1 ? /*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-box\",\n            type: \"text\",\n            value: cell,\n            readOnly: rowIndex === 0 || colIndex === col - 1,\n            onChange: e => handleInputChange(e.target.value, rowIndex, colIndex),\n            style: {\n              width: colIndex === col - 1 ? \"3em\" : \"10em\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"fccZp26W4jSe224JQXYd61uUs+k=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","AddBoxOutlinedIcon","jsxDEV","_jsxDEV","DataTable","_s","row","setRow","col","setCol","data","setData","rows","Array","fill","map","handleInputChange","value","updatedData","rowData","rowIndex","cellData","colIndex","className","children","cell","style","width","cursor","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/zhuhao/Desktop/Projects/Fitness-App/frontend/src/components/Workout/DataTable.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./DataTable.css\";\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\n\nconst DataTable = () => {\n  // Initialize the state with 5 rows and 5 columns of empty strings\n  const [row, setRow] = useState(4);\n  const [col, setCol] = useState(4);\n  const [data, setData] = useState(() => {\n    const rows = new Array(row).fill(null).map(() => new Array(col).fill(\"\"));\n    rows[0][0] = \"Actions\";\n    rows[0][1] = \"Set 1\";\n    rows[0][2] = \"Set 2\";\n    return rows;\n  });\n\n  // Handle input change\n  const handleInputChange = (value, row, col) => {\n    // Update the specific cell with the new value\n    const updatedData = data.map((rowData, rowIndex) => {\n      if (rowIndex === row) {\n        return rowData.map((cellData, colIndex) => {\n          if (colIndex === col) {\n            return value;\n          }\n          return cellData;\n        });\n      }\n      return rowData;\n    });\n\n    setData(updatedData);\n  };\n\n  return (\n    <table className=\"workout-table\">\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, colIndex) => (\n              <td\n                key={colIndex}\n                style={{ width: colIndex === col - 1 ? \"1em\" : \"10em\", cursor: 'pointer'}}\n              >\n                {rowIndex === 0 && colIndex === col - 1 ? (\n                  <AddBoxOutlinedIcon />\n                ) : (\n                  <input\n                    className=\"input-box\"\n                    type=\"text\"\n                    value={cell}\n                    readOnly={rowIndex === 0 || colIndex === col - 1}\n                    onChange={(e) =>\n                      handleInputChange(e.target.value, rowIndex, colIndex)\n                    }\n                    style={{ width: colIndex === col - 1 ? \"3em\" : \"10em\" }}\n                  />\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DataTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,kBAAkB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC,MAAMY,IAAI,GAAG,IAAIC,KAAK,CAACP,GAAG,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,MAAM,IAAIF,KAAK,CAACL,GAAG,CAAC,CAACM,IAAI,CAAC,EAAE,CAAC,CAAC;IACzEF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS;IACtBA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;IACpBA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;IACpB,OAAOA,IAAI;EACb,CAAC,CAAC;;EAEF;EACA,MAAMI,iBAAiB,GAAGA,CAACC,KAAK,EAAEX,GAAG,EAAEE,GAAG,KAAK;IAC7C;IACA,MAAMU,WAAW,GAAGR,IAAI,CAACK,GAAG,CAAC,CAACI,OAAO,EAAEC,QAAQ,KAAK;MAClD,IAAIA,QAAQ,KAAKd,GAAG,EAAE;QACpB,OAAOa,OAAO,CAACJ,GAAG,CAAC,CAACM,QAAQ,EAAEC,QAAQ,KAAK;UACzC,IAAIA,QAAQ,KAAKd,GAAG,EAAE;YACpB,OAAOS,KAAK;UACd;UACA,OAAOI,QAAQ;QACjB,CAAC,CAAC;MACJ;MACA,OAAOF,OAAO;IAChB,CAAC,CAAC;IAEFR,OAAO,CAACO,WAAW,CAAC;EACtB,CAAC;EAED,oBACEf,OAAA;IAAOoB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC9BrB,OAAA;MAAAqB,QAAA,EACGd,IAAI,CAACK,GAAG,CAAC,CAACT,GAAG,EAAEc,QAAQ,kBACtBjB,OAAA;QAAAqB,QAAA,EACGlB,GAAG,CAACS,GAAG,CAAC,CAACU,IAAI,EAAEH,QAAQ,kBACtBnB,OAAA;UAEEuB,KAAK,EAAE;YAAEC,KAAK,EAAEL,QAAQ,KAAKd,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,MAAM;YAAEoB,MAAM,EAAE;UAAS,CAAE;UAAAJ,QAAA,EAEzEJ,QAAQ,KAAK,CAAC,IAAIE,QAAQ,KAAKd,GAAG,GAAG,CAAC,gBACrCL,OAAA,CAACF,kBAAkB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEtB7B,OAAA;YACEoB,SAAS,EAAC,WAAW;YACrBU,IAAI,EAAC,MAAM;YACXhB,KAAK,EAAEQ,IAAK;YACZS,QAAQ,EAAEd,QAAQ,KAAK,CAAC,IAAIE,QAAQ,KAAKd,GAAG,GAAG,CAAE;YACjD2B,QAAQ,EAAGC,CAAC,IACVpB,iBAAiB,CAACoB,CAAC,CAACC,MAAM,CAACpB,KAAK,EAAEG,QAAQ,EAAEE,QAAQ,CACrD;YACDI,KAAK,EAAE;cAAEC,KAAK,EAAEL,QAAQ,KAAKd,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG;YAAO;UAAE;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD;QACF,GAhBIV,QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiBX,CACL;MAAC,GArBKZ,QAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAC3B,EAAA,CA7DID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AA+Df,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}